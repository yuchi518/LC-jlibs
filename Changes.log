2014/7/29
	1. Try to use different RocksDB setting.
	2. Improve MemoryPrinter code.

2014/7/5
	1. Update rocksdb lib 3.2.

2014/7/1
	1. Support ShapeFile decode. (Polygon shape only)
	2. DynamicByteBuffer support little endian bytes-order.

2014/6/5
	1. Improve RockingCache, RockingCaches classes.
	2. Add SingleIterator class.

2014/5/27
	1. Include RoaringBitmap lib. (Not use yet)
	2. Support RocksDB iterator. (Iterate all database)

2014/5/26
	1. Improve Percentage, IterableChain, DynamicByteBuffer. 

2014/5/24
	1. Add Percentage, UsedMemoryPercentage class.
	2. Add await() in ExecutorServices to wait all done.
	3. Add a name to each RockingCache.

2014/5/21
	1. Add ExecutorServices to maintain threads (globally).
	2. Improve RockingCache performance.

~2014/5/20
	1. Add more RockingCache subclasses and architecture.
	2. Improve Input/OutputStreamByteBuffer.

2014/5/15
	1. Improve, fix DynamicByteBuffer memory release algorithm, try to do MORE.

2014/5/14
	1. Change some RocksDB setting.

~2014/5/13
	1. Update InputStreamByteBuffer hasRemaining function.
	2. Add SizeAware, SizeAwareIterative, IterableChain.
	

2014/5/9
	1. Refine DynamicByteBuffer architecture. Now it can be subclass for special function.
	2. Add InputStreamByteBuffer, OutputStreamByteBuffer to read/write stream dynamically.
	3. Update TaskMonitor for nest start,stop cases.

2014/5/8
	1. Add TaskMonitor class to monitor task usage. (time, memory, etc.)

2014/5/7
	1. Rename RocksObject -> RockingObject, RocksCache -> RockingCache to avoid class conflict with RocksDB 3.0.

2014/5/7
	1. Merge RocksCache, RocksObject, RocksObjectSlice into me.tuple.rocksdb.
	

2014/5/7
	1. Fix DynamicByteBuffer var long encoding/decoding problem.

2014/5/6
	1. Update Java EWAH 0.8.6. lib.
	2. Add RocksDB lib.
	3. Update Json.org lib.


2014/1/27
	1. Refine DynamicByteBuffer;
	2. Update javaewah lib.

2014/1/7
	1. Fix TIeredIndexTable add object issue. (New object can't replace old object(same hash value))
	2. Use log flow.

2014/1/2
	1. Update TieredIndexTable.

2014/1/1
	1. Add iterate function for TieredIndexTable. 

2013/12/29
	1. Update TieredIndexTable algorithm. (Simple, but not good enough)

2013/12/26
	1. Developing TieredIndexTable, not complete yet.

2013/12/24
	1. Add JavaEWAH library. (This is a word-aligned compressed variant of the Java Bitset class. We provide both a 64-bit and a 32-bit RLE-like compression scheme. It can be used to implement bitmap indexes.)

2013/11/24
	1. Update json.

2013/11/21
	1. Add MessageConsole to support ui standard/error output.

2013/9/18
	1. Merge crypto, util libs.
	2. Add more functions in DynamicByteBuffer.

2013/9/17
	1. Init
	2. json.org lib.
